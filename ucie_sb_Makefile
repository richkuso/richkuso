# Makefile for UCIe Sideband UVM Agent
# Core component compilation for multiple simulators

# Default simulator
SIM ?= vcs

# Core source files (no tests)
SOURCES = ucie_sb_inf.sv ucie_sb_pkg.sv

# LTSM example files
LTSM_SOURCES = ucie_sb_inf.sv ucie_sb_pkg.sv ucie_sb_ltsm_model.sv ucie_sb_ltsm_example.sv

# Transaction interceptor files
INTERCEPTOR_SOURCES = ucie_sb_inf.sv ucie_sb_pkg.sv ucie_sb_transaction_interceptor.sv ucie_sb_interceptor_example.sv

# Compare result model files
COMPARE_MODEL_SOURCES = ucie_sb_inf.sv ucie_sb_pkg.sv ucie_sb_compare_result_model.sv ucie_sb_compare_result_example.sv

# Common UVM arguments
UVM_HOME ?= $(VCS_HOME)/etc/uvm-1.2
UVM_ARGS = +incdir+$(UVM_HOME)/src $(UVM_HOME)/src/uvm_pkg.sv

# Enable sideband assertions (optional)
ENABLE_ASSERTIONS ?= 1
ifeq ($(ENABLE_ASSERTIONS), 1)
    DEFINE_ARGS = +define+ENABLE_SIDEBAND_ASSERTIONS
else
    DEFINE_ARGS = 
endif

# VCS specific settings
VCS_ARGS = -sverilog -ntb_opts uvm-1.2 -debug_access+all -kdb -lca $(DEFINE_ARGS)

# Questa specific settings
QUESTA_ARGS = -sv -uvm +incdir+$(UVM_HOME)/src $(DEFINE_ARGS)

# Xcelium specific settings
XCELIUM_ARGS = -sv -uvm +incdir+$(UVM_HOME)/src $(DEFINE_ARGS)

# Default target
all: compile

# Compilation targets
compile: compile_$(SIM)

compile_vcs:
	vcs $(VCS_ARGS) $(UVM_ARGS) $(SOURCES) -o ucie_sb_agent

compile_questa:
	vlog $(QUESTA_ARGS) $(UVM_ARGS) $(SOURCES)

compile_xcelium:
	xmvlog $(XCELIUM_ARGS) $(UVM_ARGS) $(SOURCES)

# LTSM compilation targets
compile_ltsm: compile_ltsm_$(SIM)

compile_ltsm_vcs:
	vcs $(VCS_ARGS) $(UVM_ARGS) $(LTSM_SOURCES) -o ucie_sb_ltsm

compile_ltsm_questa:
	vlog $(QUESTA_ARGS) $(UVM_ARGS) $(LTSM_SOURCES)

compile_ltsm_xcelium:
	xmvlog $(XCELIUM_ARGS) $(UVM_ARGS) $(LTSM_SOURCES)

# LTSM demo targets
run_ltsm_demo: run_ltsm_demo_$(SIM)

run_ltsm_demo_vcs: compile_ltsm_vcs
	./ucie_sb_ltsm +UVM_TESTNAME=ucie_sb_ltsm_test +UVM_VERBOSITY=UVM_MEDIUM

run_ltsm_demo_questa: compile_ltsm_questa
	vsim ucie_sb_ltsm_testbench -c -do "run -all; quit" +UVM_TESTNAME=ucie_sb_ltsm_test +UVM_VERBOSITY=UVM_MEDIUM

run_ltsm_demo_xcelium: compile_ltsm_xcelium
	xmsim ucie_sb_ltsm_testbench +UVM_TESTNAME=ucie_sb_ltsm_test +UVM_VERBOSITY=UVM_MEDIUM -exit

# Interceptor compilation targets
compile_interceptor: compile_interceptor_$(SIM)

compile_interceptor_vcs:
	vcs $(VCS_ARGS) $(UVM_ARGS) $(INTERCEPTOR_SOURCES) -o ucie_sb_interceptor

compile_interceptor_questa:
	vlog $(QUESTA_ARGS) $(UVM_ARGS) $(INTERCEPTOR_SOURCES)

compile_interceptor_xcelium:
	xmvlog $(XCELIUM_ARGS) $(UVM_ARGS) $(INTERCEPTOR_SOURCES)

# Interceptor demo targets
run_interceptor_demo: run_interceptor_demo_$(SIM)

run_interceptor_demo_vcs: compile_interceptor_vcs
	./ucie_sb_interceptor +UVM_TESTNAME=ucie_sb_interceptor_test +UVM_VERBOSITY=UVM_MEDIUM

run_interceptor_demo_questa: compile_interceptor_questa
	vsim ucie_sb_interceptor_testbench -c -do "run -all; quit" +UVM_TESTNAME=ucie_sb_interceptor_test +UVM_VERBOSITY=UVM_MEDIUM

run_interceptor_demo_xcelium: compile_interceptor_xcelium
	xmsim ucie_sb_interceptor_testbench +UVM_TESTNAME=ucie_sb_interceptor_test +UVM_VERBOSITY=UVM_MEDIUM -exit

# Compare result model targets
compile_compare_model: compile_compare_model_$(SIM)

compile_compare_model_vcs:
	vcs $(VCS_ARGS) $(UVM_ARGS) $(COMPARE_MODEL_SOURCES) -o ucie_sb_compare_model

compile_compare_model_questa:
	vlog $(QUESTA_ARGS) $(UVM_ARGS) $(COMPARE_MODEL_SOURCES) -work work
	vsim -c -do "run -all; exit" work.ucie_sb_compare_result_testbench

compile_compare_model_xcelium:
	xmvlog $(XCELIUM_ARGS) $(UVM_ARGS) $(COMPARE_MODEL_SOURCES)
	xmelab ucie_sb_compare_result_testbench

# Compare result model demo targets
run_compare_model_demo: run_compare_model_demo_$(SIM)

run_compare_model_demo_vcs: compile_compare_model_vcs
	./ucie_sb_compare_model +UVM_TESTNAME=ucie_sb_compare_result_test +UVM_VERBOSITY=UVM_MEDIUM

run_compare_model_demo_questa: compile_compare_model_questa
	vsim -c -do "run -all; exit" work.ucie_sb_compare_result_testbench +UVM_TESTNAME=ucie_sb_compare_result_test +UVM_VERBOSITY=UVM_MEDIUM

run_compare_model_demo_xcelium: compile_compare_model_xcelium
	xmsim ucie_sb_compare_result_testbench +UVM_TESTNAME=ucie_sb_compare_result_test +UVM_VERBOSITY=UVM_MEDIUM -exit

# Syntax check targets
syntax: syntax_$(SIM)

syntax_vcs:
	vcs $(VCS_ARGS) $(UVM_ARGS) $(SOURCES) -check_syntax

syntax_questa:
	vlog $(QUESTA_ARGS) $(UVM_ARGS) $(SOURCES) -work work

syntax_xcelium:
	xmvlog $(XCELIUM_ARGS) $(UVM_ARGS) $(SOURCES) -elaborate

# Clean targets
clean:
	rm -rf simv* csrc* ucli* *.log *.vpd *.fsdb *.shm *.trn work* transcript *.wlf
	rm -rf DVEfiles inter.vpd *.daidir *.history .vlogansetup.env .vlogansetup.args
	rm -rf ucie_sb_agent ucie_sb_simv ucie_sb_ltsm ucie_sb_interceptor ucie_sb_compare_model *.vcd
	rm -rf compare_result_*.log

# Help target
help:
	@echo "UCIe Sideband UVM Agent Makefile"
	@echo "================================="
	@echo "Available targets:"
	@echo "  compile               - Compile core UVM agent (default: VCS)"
	@echo "  compile_ltsm          - Compile LTSM example"
	@echo "  compile_interceptor   - Compile transaction interceptor example"
	@echo "  compile_compare_model - Compile compare result model example"
	@echo "  run_ltsm_demo         - Run LTSM training demonstration"
	@echo "  run_interceptor_demo  - Run transaction interceptor demonstration"
	@echo "  run_compare_model_demo- Run compare result model demonstration"
	@echo "  syntax                - Check syntax only"
	@echo "  clean                 - Clean build artifacts"
	@echo "  help                  - Show this help"
	@echo ""
	@echo "Simulator selection:"
	@echo "  SIM=vcs       - Use Synopsys VCS (default)"
	@echo "  SIM=questa    - Use Mentor Questa/ModelSim"
	@echo "  SIM=xcelium   - Use Cadence Xcelium"
	@echo ""
	@echo "Options:"
	@echo "  ENABLE_ASSERTIONS=1  - Enable sideband assertions (default)"
	@echo "  ENABLE_ASSERTIONS=0  - Disable sideband assertions"
	@echo ""
	@echo "Example usage:"
	@echo "  make compile SIM=vcs"
	@echo "  make compile_ltsm SIM=vcs"
	@echo "  make compile_interceptor SIM=vcs"
	@echo "  make compile_compare_model SIM=vcs"
	@echo "  make run_ltsm_demo SIM=vcs"
	@echo "  make run_interceptor_demo SIM=vcs"
	@echo "  make run_compare_model_demo SIM=vcs"
	@echo "  make syntax SIM=questa"
	@echo "  make clean"

.PHONY: all compile compile_ltsm compile_interceptor syntax clean help run_ltsm_demo run_interceptor_demo compile_vcs compile_questa compile_xcelium syntax_vcs syntax_questa syntax_xcelium